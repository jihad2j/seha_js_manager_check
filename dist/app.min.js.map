{"version":3,"sources":["app.js"],"names":["express","require","app","logger","indexsickleavers","path","managerRouter","mongoose","cookieParser","Customer","usersRouter","connect","uri","then","console","log","err","error","fileURLToPath","methodOverride","join","__dirname","use","urlencoded","extended","bodyParser","json","dirname","modelsickleave","set","req","res","next","message","locals","get","title","findById","params","id","result","status","render","port","module","exports"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,IAAMF,UADNA,KAAOC,QAAU,QAGjBE,OAASF,QAAQ,UAFjBC,aAAND,QAAA,iBAIMG,iBAAmBH,QAAQ,0BAH3BI,YAAeJ,QAArB,qBAKMK,cAAgBL,QAAQ,uBAJxBE,eAAiBF,QAAvB,+BAMMM,SAAWN,QAAQ,YALnBO,WAAeP,QAAQ,eAOvBQ,SAAWR,QAAQ,+BANnBG,eAAgBH,QAAGA,mBACnBS,KAAAA,KACAJ,IAAAA,qHAYNC,SAASI,QAAQC,KAVjBC,KAAMN,WAAAA,OAAQO,QAAUC,IAAC,4CAUzB,MAES,SAAAC,GAAG,OAAIF,QAAQG,MAAM,+BAAgCD,kBAIpCf,QAAQ,OAA1BiB,uBAAAA,wBAbUjB,QAAU,QAAxBkB,kBAAAA,QAeAA,eAAiBlB,QAAQ,mBAX7BC,IAAMU,IAAG,QAAGP,KAAAe,KAAAC,UAAA,UAGZd,IAAAA,IAAQ,cACLM,OAAKX,IADRoB,IAAAtB,QAESuB,WAAG,CAAAC,UAAA,KAAAtB,IAAAoB,IAAAG,WAAYR,QAAZf,IAGZoB,IAAAnB,OAAA,QAWAD,IAAIoB,IAAItB,QAAQ0B,QAChBxB,IAAIoB,IAAItB,QAXkBC,WAAQ,CAWLuB,UAAU,KACvCtB,IAZQgB,IAAAA,gBAaRhB,IAAIoB,IAAItB,QAAO,OAAQK,KAAKe,KAAKC,UAAW,YAC5CnB,IAAIoB,IAAIH,eAAe,YAEvBjB,IAfQyB,IAAAA,IAeKvB,kBACbF,IAAIoB,IAAI,SAAUZ,aAflBR,IAAIiB,IAAAA,WAAcb,eAiBlBJ,IAAIoB,IAAI,mBAAoBM,gBAd5B1B,IAAI2B,IAAI,SAAAb,EAARc,EAAuBC,EAAvBC,GAE6BR,EAAAA,OAAUS,QAAAjB,EAAAiB,QAAvCF,EAAAG,OAAAjB,MAAA,gBAAAa,EAAA5B,IAAAiC,IAAA,OAAAnB,EAAA,GAGAd,EAAIoB,OAAItB,EAAQ0B,QAAhB,KACAxB,EAAIoB,OAAItB,WACRE,IAAIoB,IAAId,QAAAA,SAARsB,EAAAC,GACA7B,EAAIoB,OAAItB,QAAO,CAAAoC,MAAahB,cAG5BlB,IAAIoB,IAAI,aAAKlB,SAAb0B,EAAAC,GACA7B,EAAIoB,OAAI,aAAUZ,CAAlB0B,MAAA,cAEAlC,IAAIoB,IAAI,SAAA,SAARQ,EAA4BF,GAE5B1B,EAAIoB,OAAI,gBAAmBS,CAAnBK,MAA8B,cAGpCL,IAAAA,IAAIG,cAAeJ,SAAGA,EAAKK,GAkB3B1B,SAAS4B,SAASP,EAAIQ,OAAOC,IAAI1B,KAAK,SAAC2B,GAfvCT,EAAIU,OAAOzB,iBAAX,CACI0B,IAAAA,MAcJ,MAXM,SAAA1B,GACNe,QAAAhB,IAAWC,OAGXe,IAAAA,OAAIW,KAAO,WAAgBN,QAAKrB,IAAE,sCAAA4B,QACnCC,OAFDC,QAAA3C","file":"app.min.js","sourcesContent":["const express = require('express');\nconst app = express();\nconst path = require('path');\nconst logger = require('morgan');\nconst cookieParser = require('cookie-parser');\nconst indexsickleavers = require('./routes/sickleaves.js');\nconst usersRouter = require('./routes/users.js');\nconst managerRouter = require('./routes/manager.js');\nconst modelsickleave = require('./routes/model_sikleaves.js');\nconst mongoose = require('mongoose');\nconst bodyParser = require('body-parser');\nconst Customer = require('./models/customerSchema.cjs');\nvar methodOverride = require('method-override')\n\nconst port = 3501\n\nconst uri = \"mongodb+srv://zoolka:zzzzz11111@masarproject.daj3l2l.mongodb.net/?retryWrites=true&w=majority&appName=masarproject\";\n\n\nmongoose.connect(uri)\n  .then(() => console.log('You successfully connected to MongoDB!'))\n  .catch(err => console.error('Error connecting to MongoDB:', err));\n\n\n// Your existing code starts here\nconst { fileURLToPath } = require('url'); // Moved this line here\nconst { dirname } = require('path');\nvar methodOverride = require('method-override')\n\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug');\n\napp.use(express.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\napp.use(methodOverride('_method'))\n\napp.use('/', indexsickleavers);\napp.use('/users', usersRouter);\napp.use('/manager', managerRouter);\napp.use('/model_sikleaves', modelsickleave);\n\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\napp.get('/main', function(req, res) {\n  res.render('index', { title: 'Express' });\n});\napp.get('/slenquiry', function(req, res) {\n  res.render('sickleaves', { title: 'Express' });\n});\napp.get('/addqr', function(req, res) {\n  res.render('sickleavesadd', { title: 'Express' });\n});\n\napp.get('/editqr/:id', (req, res) => {\n  Customer.findById(req.params.id).then((result) => {\n    res.render('sickleavesedit', {\n      obj: result\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n});\n// Rest of the code...\n\napp.listen(port, function() {\n  console.log('App is running on http://localhost:' + port);\n});\nmodule.exports = app;\n"]}