{"version":3,"sources":["app.js"],"names":["express","require","app","logger","indexsickleavers","path","managerRouter","mongoose","cookieParser","Customer","usersRouter","modelsickleave","then","console","log","error","err","dirname","methodOverride","port","join","__dirname","uri","use","urlencoded","extended","bodyParser","json","fileURLToPath","set","message","req","get","status","res","title","locals","params","result","render","module","exports"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,IAAMF,UADNA,KAAOC,QAAU,QAGjBE,OAASF,QAAQ,UAFjBC,aAAND,QAAA,iBAIMG,iBAAmBH,QAAQ,0BAH3BI,YAAeJ,QAArB,qBAKMK,cAAgBL,QAAQ,uBAJxBE,eAAiBF,QAAvB,+BAMMM,SAAWN,QAAQ,YALnBO,WAAeP,QAAQ,eAOvBQ,SAAWR,QAAQ,+BANnBG,eAAgBH,QAAGA,mBACnBS,KAAAA,KACAJ,IAAAA,qHACNC,SAAMI,QAAAA,KAWHC,KAAK,WAAA,OAAMC,QAAQC,IAAI,4CAX1B,MACMP,SAAAA,GAAQ,OAAGN,QAAQc,MAAA,+BAAzBC,kBAEyBf,QAAA,OAAnBQ,uBAAAA,wBAccR,QAAQ,QAApBgB,kBAAAA,QAbJC,eAAiBjB,QAAQ,mBAE7BC,IAAMiB,IAAI,QAAVd,KAAAe,KAAAC,UAAA,UAEAnB,IAAMoB,IAAG,cAAG,OAGJpB,IAAAqB,IAAAvB,QAAawB,WAAK,CAAAC,UAAA,KAAlBvB,IADRqB,IAAAG,WAESC,QAAGzB,IAAAqB,IAAApB,OAAIU,QAAJX,IAGZqB,IAAAvB,QAAA2B,QAYAzB,IAAIqB,IAAIvB,QAAQwB,WAAW,CAAEC,UAAU,KACvCvB,IAAIqB,IAAIf,gBACRN,IAbQ0B,IAAAA,QAAAA,OAaevB,KAAKe,KAbpBQ,UAAkC,YAc1C1B,IAAIqB,IAAIL,eAAe,YAEvBhB,IAAIqB,IAAI,IAAKnB,kBACbF,IAhBQe,IAAAA,SAgBUP,aAClBR,IAAIqB,IAAI,WAAYjB,eAhBpBJ,IAAIgB,IAAAA,mBAAwBP,gBAE5BT,IAAI2B,IAAI,SAASxB,EAAKe,EAAKC,EAAAA,GAG3BnB,EAAIqB,OAAIvB,QAAQwB,EAAWM,QAAEL,EAAAA,OAAUV,MAAA,gBAAAgB,EAAA7B,IAAA8B,IAAA,OAAAhB,EAAA,GAEvCd,EAAIqB,OAAIpB,EAAO8B,QAAf,KACA/B,EAAIqB,OAAIvB,WACmBE,IAA3B8B,IAAA,QAAA,SAAAD,EAAAG,GACAhC,EAAIqB,OAAIf,QAAR,CAAA2B,MAAA,cAEAjC,IAAIqB,IAAIL,aAAc,SAACa,EAAvBG,GAEAhC,EAAIqB,OAASnB,aAAAA,CAAb+B,MAAA,cAEAjC,IAAIqB,IAAI,SAAR,SAAoBjB,EAAAA,GACpBJ,EAAIqB,OAAI,gBAAoBZ,CAAAA,MAAAA,cAI1BuB,IAAAA,IAAIE,cAAiBpB,SAAAA,EAAIc,GACzBI,SAAIE,SAAJL,EAAsBM,OAAKL,IAAIpB,KAAZ,SAAA0B,GAmBjBJ,EAAIK,OAAO,iBAAkB,CAhB3BN,IAAAA,MAHJC,MAHF,SAAAlB,GAUIgB,QAAIlB,IAARE,OAGAd,IAAI8B,OAAIb,KAAA,WACNe,QAAIK,IAAO,sCAAcpB,QAAAqB,OAAzBC,QAAAvC","file":"app.min.js","sourcesContent":["const express = require('express');\nconst app = express();\nconst path = require('path');\nconst logger = require('morgan');\nconst cookieParser = require('cookie-parser');\nconst indexsickleavers = require('./routes/sickleaves.js');\nconst usersRouter = require('./routes/users.js');\nconst managerRouter = require('./routes/manager.js');\nconst modelsickleave = require('./routes/model_sikleaves.js');\nconst mongoose = require('mongoose');\nconst bodyParser = require('body-parser');\nconst Customer = require('./models/customerSchema.cjs');\nvar methodOverride = require('method-override')\n\nconst port = 3501\n\nconst uri = \"mongodb+srv://zoolka:zzzzz11111@masarproject.daj3l2l.mongodb.net/?retryWrites=true&w=majority&appName=masarproject\";\n\nmongoose.connect(uri)\n  .then(() => console.log('You successfully connected to MongoDB!'))\n  .catch(err => console.error('Error connecting to MongoDB:', err));\n\n\n// Your existing code starts here\nconst { fileURLToPath } = require('url'); // Moved this line here\nconst { dirname } = require('path');\nvar methodOverride = require('method-override')\n\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug');\n\napp.use(express.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\napp.use(methodOverride('_method'))\n\napp.use('/', indexsickleavers);\napp.use('/users', usersRouter);\napp.use('/manager', managerRouter);\napp.use('/model_sikleaves', modelsickleave);\n\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\napp.get('/main', function(req, res) {\n  res.render('index', { title: 'Express' });\n});\napp.get('/slenquiry', function(req, res) {\n  res.render('sickleaves', { title: 'Express' });\n});\napp.get('/addqr', function(req, res) {\n  res.render('sickleavesadd', { title: 'Express' });\n});\n\napp.get('/editqr/:id', (req, res) => {\n  Customer.findById(req.params.id).then((result) => {\n    res.render('sickleavesedit', {\n      obj: result\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n});\n// Rest of the code...\n\napp.listen(port, function() {\n  console.log('App is running on http://localhost:' + port);\n});\nmodule.exports = app;\n"]}