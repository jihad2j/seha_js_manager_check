{"version":3,"sources":["app.js"],"names":["express","require","app","logger","indexsickleavers","path","managerRouter","mongoose","cookieParser","Customer","usersRouter","modelsickleave","connect","uri","then","bodyParser","console","err","error","fileURLToPath","dirname","set","log","join","__dirname","use","urlencoded","extended","json","methodOverride","req","res","next","message","get","status","render","locals","params","id","result","listen","port"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,IAAMF,UADNA,KAAOC,QAAU,QAGjBE,OAASF,QAAQ,UAFjBC,aAAND,QAAA,iBAIMG,iBAAmBH,QAAQ,0BAH3BI,YAAeJ,QAArB,qBAKMK,cAAgBL,QAAQ,uBAJxBE,eAAiBF,QAAvB,+BAMMM,SAAWN,QAAQ,YALnBO,WAAeP,QAAQ,eAOvBQ,SAAWR,QAAQ,+BANnBG,eAAgBH,QAAGA,mBACnBS,KAAAA,KAEAC,IAAAA,qHAaNJ,SAASK,QAAQC,KAXjBC,KAAMC,WAAAA,OAAUC,QAAGf,IAAQ,4CAW3B,MAES,SAAAgB,GAAG,OAAID,QAAQE,MAAM,+BAAgCD,kBAIpChB,QAAQ,OAA1BkB,uBAAAA,wBAbRlB,QAAA,QAAUmB,kBAAAA,QAIJP,eAAMZ,QAAA,mBAIJC,IAAAmB,IAAA,QAAcC,KAAIC,KAAAC,UAAA,UAAlBtB,IADRmB,IAAA,cAESJ,OAAGf,IAGZuB,IAAAzB,QAAA0B,WAAA,CAAAC,UAAA,KASAzB,IAAIuB,IAAIV,WAAWa,QACnB1B,IAAIuB,IAAItB,OATkBF,QAU1BC,IAVQiB,IAAAA,QAAAA,QAWRjB,IAAIuB,IAAIzB,QAAQ0B,WAAW,CAAEC,UAAU,KACvCzB,IAAIuB,IAAIjB,gBACRN,IAAIuB,IAAIzB,QAAO,OAZYK,KAACkB,KAYKC,UAAW,YAC5CtB,IAbQkB,IAAAA,eAae,YAZvBlB,IAAI2B,IAAAA,IAAAA,kBAeJ3B,IAAIuB,IAAI,SAAUf,aAblBR,IAAImB,IAAI,WAAShB,eACjBH,IAAImB,IAAI,mBAARV,gBAE6BgB,IAAAA,IAAAA,SAAUV,EAAAa,EAAAC,EAAAC,GACvC9B,EAAIuB,OAAIV,QAAAE,EAARgB,QACA/B,EAAIuB,OAAItB,MAAR,gBAAA2B,EAAA5B,IAAAgC,IAAA,OAAAjB,EAAA,GAE6BU,EAAAA,OAAUV,EAAAkB,QAAA,KAAvCJ,EAAAK,OAAA,WAGAlC,IAAIuB,IAAII,QAAAA,SAAeC,EAAAC,GAEvB7B,EAAIuB,OAASrB,QAAAA,CAAAA,MAAb,cAEAF,IAAIuB,IAAI,aAAYnB,SAAAA,EAApByB,GACA7B,EAAIuB,OAAI,aAAR,CAA4Bd,MAAAA,cAG1BT,IAAAgC,IAAA,SAAA,SAAAJ,EAAAC,GACAA,EAAIM,OAAOJ,gBAAcA,CAAAA,MAAzB,cAIAF,IAAAA,IAAII,cAAO,SAAAL,EAAcC,GACzBA,SAAIK,SAAJN,EAAAQ,OAAAC,IAAAzB,KAAA,SAAA0B,GAPFT,EAAAK,OAAA,iBAAA,CAUIF,IAAIM,MAHNT,MAI6B,SAAAd,GAA7BD,QAAAM,IAAAL,OAGyBf,IAAzBuC,OAAAC,KAAA,WADF1B,QAAAM,IAAA,sCAAAoB,QAIEX,OAAIK,QAAOlC","file":"app.min.js","sourcesContent":["const express = require('express');\nconst app = express();\nconst path = require('path');\nconst logger = require('morgan');\nconst cookieParser = require('cookie-parser');\nconst indexsickleavers = require('./routes/sickleaves.js');\nconst usersRouter = require('./routes/users.js');\nconst managerRouter = require('./routes/manager.js');\nconst modelsickleave = require('./routes/model_sikleaves.js');\nconst mongoose = require('mongoose');\nconst bodyParser = require('body-parser');\nconst Customer = require('./models/customerSchema.cjs');\nvar methodOverride = require('method-override')\n\nconst port = 3501\n\n\n\nconst uri = \"mongodb+srv://zoolka:zzzzz11111@masarproject.daj3l2l.mongodb.net/?retryWrites=true&w=majority&appName=masarproject\";\n\n\nmongoose.connect(uri)\n  .then(() => console.log('You successfully connected to MongoDB!'))\n  .catch(err => console.error('Error connecting to MongoDB:', err));\n\n\n// Your existing code starts here\nconst { fileURLToPath } = require('url'); // Moved this line here\nconst { dirname } = require('path');\nvar methodOverride = require('method-override')\n\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug');\n\napp.use(express.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\napp.use(methodOverride('_method'))\n\napp.use('/', indexsickleavers);\napp.use('/users', usersRouter);\napp.use('/manager', managerRouter);\napp.use('/model_sikleaves', modelsickleave);\n\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\napp.get('/main', function(req, res) {\n  res.render('index', { title: 'Express' });\n});\napp.get('/slenquiry', function(req, res) {\n  res.render('sickleaves', { title: 'Express' });\n});\napp.get('/addqr', function(req, res) {\n  res.render('sickleavesadd', { title: 'Express' });\n});\n\napp.get('/editqr/:id', (req, res) => {\n  Customer.findById(req.params.id).then((result) => {\n    res.render('sickleavesedit', {\n      obj: result\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n});\n// Rest of the code...\n\napp.listen(port, function() {\n  console.log('App is running on http://localhost:' + port);\n});\nmodule.exports = app;\n"]}