{"version":3,"sources":["app.js"],"names":["express","require","app","path","logger","cookieParser","indexsickleavers","usersRouter","managerRouter","modelsickleave","mongoose","bodyParser","Customer","methodOverride","port","uri","connect","then","console","log","err","error","fileURLToPath","dirname","set","join","__dirname","use","urlencoded","extended","json","req","res","next","locals","message","get","status","render","title","findById","params","id","result","obj","listen","module","exports"],"mappings":"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","sourcesContent":["const express = require('express');\nconst app = express();\nconst path = require('path');\nconst logger = require('morgan');\nconst cookieParser = require('cookie-parser');\nconst indexsickleavers = require('./routes/sickleaves.js');\nconst usersRouter = require('./routes/users.js');\nconst managerRouter = require('./routes/manager.js');\nconst modelsickleave = require('./routes/model_sikleaves.js');\nconst mongoose = require('mongoose');\nconst bodyParser = require('body-parser');\nconst Customer = require('./models/customerSchema.cjs');\nvar methodOverride = require('method-override')\n\nconst port = 3501\n\n\n\nconst uri = \"mongodb+srv://zoolka:zzzzz11111@masarproject.daj3l2l.mongodb.net/?retryWrites=true&w=majority&appName=masarproject\";\n\n\nmongoose.connect(uri)\n  .then(() => console.log('You successfully connected to MongoDB!'))\n  .catch(err => console.error('Error connecting to MongoDB:', err));\n\n\n// Your existing code starts here\nconst { fileURLToPath } = require('url'); // Moved this line here\nconst { dirname } = require('path');\nvar methodOverride = require('method-override')\n\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug');\n\napp.use(express.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\napp.use(methodOverride('_method'))\n\napp.use('/', indexsickleavers);\napp.use('/users', usersRouter);\napp.use('/manager', managerRouter);\napp.use('/model_sikleaves', modelsickleave);\n\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\napp.get('/main', function(req, res) {\n  res.render('index', { title: 'Express' });\n});\napp.get('/slenquiry', function(req, res) {\n  res.render('sickleaves', { title: 'Express' });\n});\napp.get('/addqr', function(req, res) {\n  res.render('sickleavesadd', { title: 'Express' });\n});\n\napp.get('/editqr/:id', (req, res) => {\n  Customer.findById(req.params.id).then((result) => {\n    res.render('sickleavesedit', {\n      obj: result\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n});\n// Rest of the code...\n\napp.listen(port, function() {\n  console.log('App is running on http://localhost:' + port);\n});\nmodule.exports = app;\n"],"file":"app.dev.js"}